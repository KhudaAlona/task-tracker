const express = require('express');
const cors = require('cors');
const { Task } = require('./db');  // –ü–æ—Ç—Ä—ñ–±–Ω–æ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ Task, –Ω–µ mongoose
const tasksRouter = require('./routes/tasks');

const app = express();

// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è mongoose
const mongoose = require('mongoose');

// –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
if (mongoose.connection.readyState === 0) {
  mongoose.connect('mongodb://127.0.0.1:27017/tasktracker', {
    useNewUrlParser: true,
    useUnifiedTopology: true,
  });
}

app.use(cors());
app.use(express.json());
app.use('/api/tasks', tasksRouter);

const PORT = 3000;

if (require.main === module) {
  mongoose.connection.once('open', () => {
    console.log('üü¢ MongoDB –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è –≤—ñ–¥–∫—Ä–∏—Ç–µ. –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä...');
    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });
  });

  mongoose.connection.on('error', (err) => {
    console.error('‚ùå MongoDB –ø–æ–º–∏–ª–∫–∞ –∑‚Äô—î–¥–Ω–∞–Ω–Ω—è:', err.message);
  });
}

module.exports = app;
